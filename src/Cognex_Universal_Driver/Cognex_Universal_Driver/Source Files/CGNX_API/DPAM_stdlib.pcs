'!TITLE "Denso robot program"

#Include "CGNX_API.h"

'========================================================================================
' Conversion- Variable 2 String 
'========================================================================================

'
'Convert Integer to String
'
Function Int2Str(ByVal num As Integer) As String
	Int2Str = Trim(Str(num))
End Function

'
'Convert Double to String
'
Function Dob2Str(ByVal num As Double) As String
	Dob2Str = Trim(Str(num))
End Function

'
'Convert Single to String
'
Function Sng2Str(ByVal num As Single) As String
	Sng2Str = Trim(Str(num))
End Function

'
'Convert CurPos to String (format: x,y,z,rz,ry,rx)
'
Function CurPos2Str() As String
	CurPos2Str = Sprintf("%f,%f,%f,%f,%f,%f",_
				 PosX(CurPos), PosY(CurPos), PosZ(CurPos),_
				 PosRZ(CurPos), PosRY(CurPos), PosRX(CurPos))
End Function

'
'Convert CurJnt to String
'
Function CurJnt2Str() As String
	CurJnt2Str = Sprintf("%f,%f,%f,%f,%f,%f",_
						Joint(1, CurJnt), Joint(2, CurJnt),_
						Joint(3, CurJnt), Joint(4, CurJnt),_
						Joint(5, CurJnt), Joint(6, CurJnt))
End Function

'========================================================================================
' Conversion - String 2 Variable
'========================================================================================

'
'Convert String (format: x,y,z,rz,ry,rx) to Position Type 
'
Function Str2Pos(ByVal posStr As String) As Position
	Dim strElements As Variant
	strElements = split(posStr, ",")

	LetX Str2Pos = Val(strElements(0))
	LetY Str2Pos = Val(strElements(1))
	LetZ Str2Pos = Val(strElements(2))
	LetRx Str2Pos = Val(strElements(5))
	LetRy Str2Pos = Val(strElements(4))
	LetRz Str2Pos = Val(strElements(3))
	LetF Str2Pos = -1
End Function

'========================================================================================
' Conversion - Other
'========================================================================================

'
'Convert from Second to Millisecons
'
Function Sec2Millis(ByVal timeInSeconds As Single) As Single
	Sec2Millis = timeInSeconds * 1000
End Function

'========================================================================================
' Robot Motion
'========================================================================================

'
'Move to a Position
'
Sub Move2Point(targetPos As Position)
	TakeArm Keep = 1
	SingularAvoid(2)	'Enable Singularity Avoidance Option
	LetF targetPos = -2	'Automatically select figure that achieves the shortest distance.
	Move P, targetPos
	SingularAvoid(0)
End Sub

'
'Move to a Position and add settle time
'
Sub Move2PointAndSettle(targetPos As Position, settleTime as Single)
	TakeArm Keep = 1
	SingularAvoid(2)	'Enable Singularity Avoidance Option
	LetF targetPos = -2	'Automatically select figure that achieves the shortest distance.
	Move P, targetPos
	Delay Sec2Millis(settleTime)
	SingularAvoid(0)
End Sub

'
'Pick Part
'
Sub MoveAndPickPart(targetPos As Position)
	TakeArm Keep = 1
	SingularAvoid(2)	'Enable Singularity Avoidance Option
	LetF targetPos = -2	'Automatically select figure that achieves the shortest distance.
	Call ReleasePart
	Approach P, targetPos, 100
	Move L, targetPos
	Call GrabPart
	Depart L, 100
	SingularAvoid(0)
End Sub

'
'Place Part
'
Sub MoveAndPlacePart(targetPos As Position)
	TakeArm Keep = 1
	SingularAvoid(2)	'Enable Singularity Avoidance Option
	LetF targetPos = -2	'Automatically select figure that achieves the shortest distance.
	Approach P, targetPos, 100
	Move L, targetPos
	Call ReleasePart
	Depart L, 100
	SingularAvoid(0)
End Sub

'========================================================================================
' EOAT Actions
'========================================================================================

'
' Grab Part
'
Sub GrabPart()
	'Run Grap Part Commands
End Sub

'
' Release Part
'
Sub ReleasePart()
	'Run Release Part Commands
End Sub

'========================================================================================
' Data Validation
'========================================================================================

'
'Check that Command is ment for the right function
'
Function checkInputData(ByVal inputData As Variant, ByVal setData As String) As Integer
	If inputData = setData Then 
		checkInputData = SUCCEEDED
	Else
		MsgBox("Input data is incorrect")
		checkInputData = FAILED
	End If
End Function
