'!TITLE "Denso robot program"

#Include "..\CGNX_API.pcs"

'
'Perform Handeye Calibration 2D
'
Function CGNX_HECalib2D(ByVal srvID As Integer,_
						ByVal cam As Integer,_
						ByVal targetID As Integer,_
						ByVal settleTime As Single,_
						ByVal numPosX As Integer,_
						ByVal stepSizeX As Single,_
						ByVal numPosY As Integer,_
						ByVal stepSizeY As Single,_
						ByVal numPosRot As Integer,_
						ByVal angleMin As Single,_
						ByVal angleMax As Single) As Integer
	
	Dim recvMsg As Variant
	Dim startPos As Position
	Dim movePos As Position
	Dim stepSizeAngle As Single

	'Loop Counters
	Dim yIndex As Integer = 0
	Dim	xIndex As Integer = 0
	Dim aIndex As Integer = 0
	
	CGNX_HECalib2D = FAILED

	recvMsg = CGNX_HEB(srvID, cam)
	if recvMsg(1) <> Int2Str(SUCCEEDED) Then Exit Function

	'Remember Start Position
	startPos = CurPos
	movePos = startPos

	'Translation Moves
	For yIndex = 0 To (numPosY - 1)
		LetY movePos = PosY(startPos) + (yIndex * stepSizeY)
		For xIndex = 0 To (numPosX - 1)
			LetX movePos = PosX(startPos) + (xIndex * stepSizeX)

			Call Move2PointAndSettle(movePos, settleTime)
			
			recvMsg = CGNX_HE(srvID, cam, targetID)
			if recvMsg(1) <> Int2Str(SUCCEEDED) Then Exit Function
		Next xIndex	' End for X...
	Next yIndex ' End for Y...

	'Rotation Moves
	stepSizeAngle = (angleMax - angleMin) / (numPosRot - 1)
	movePos = startPos
	LetRz movePos = PosRz(movePos) + angleMin
	For aIndex = 0 To (numPosRot - 1)
		LetRz movePos = PosRz(movePos) + (aIndex * stepSizeAngle)

		Call Move2PointAndSettle(movePos, settleTime)
				
		recvMsg = CGNX_HE(srvID, cam, targetID)
		if recvMsg(1) <> Int2Str(SUCCEEDED) Then Exit Function
	Next aIndex ' End for A...
	
	recvMsg = CGNX_HEE(srvID, cam)
	If recvMsg(1) <> Int2Str(SUCCEEDED) Then Exit Function
	
	CGNX_HECalib2D = SUCCEEDED	
End Function		
